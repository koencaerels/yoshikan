# This file defines the content types on the website. See the documentation for
# details: https://docs.bolt.cm/contenttypes/intro

# --------------------------------------------------------------------------
# The Homepage content type is a singleton: There can be only one record of 
# this content type.

homepage:
    name: Homepage
    singular_name: Homepage
    fields:        
        title:
            type: text
            class: large
            group: Inhoud
            label: Titel 1
        content_1:
            label: Inhoud 1
            type: redactor
            group: Inhoud
        title_2:
            type: text
            class: large
            group: Inhoud
            label: Titel 2
        content_2:
            label: Inhoud 2
            type: redactor
            group: Inhoud
        toonInschrijving:
            type: checkbox
            label: Toon inschrijving?
            group: Inschrijven
        textInschrijving:
            type: redactor
            label: Text Inschrijving
            group: Inschrijven
        image_1:
            label: Beeld 1
            group: Beelden
            type: image
            upload: beelden
        image_2:
            label: Beeld 2
            type: image
            group: Beelden
            upload: beelden
        image_3:
            label: Beeld 3
            type: image
            group: Beelden
            upload: beelden
        slug:
            type: slug
            uses: title
            group: Meta
    viewless: false
    singleton: true
    icon_many: "fa:home"
    icon_one: "fa:home"

# ------------------------------------------------------------------------------
# Pages can be used for the more 'static' pages on your site. This content-type
# has a 'templateselect' field, which allows you to override the record_template
# setting for an individual page.
# The taxonomy for this ContentType is defined as 'groups', which is a so-called
# "grouping taxonomy". This way you can easily group sets of pages that logically
# belong together. If your site has a 'services' section, in which you'd like to
# list the different types of services a company provides, you can group these
# together.

nieuws:
    name: Nieuws
    singular_name: Nieuws
    fields:
        title:
            type: text
            class: large
            group: Entry
        teaser:
            type: redactor
            postfix: |
                A text-only version of the content, that can be used to "tease"
                the content when it's used in listing pages or search results.
        image:
            type: image
            upload: entries
        body:
            type: article
        video:
            type: embed
        slug:
            type: slug
            uses: title
            group: Meta
    relations:
        locatie:
            multiple: true
            label: Nieuws voor deze locatie
            required: false
    taxonomy: [ categories, tags, groups ]
    record_template: entry.twig
    listing_template: listing.twig
    listing_records: 10
    default_status: published
    order: -publishedAt
    records_per_page: 10
    icon_many: "fa:newspaper"
    icon_one: "fa:fa-bullhorn"

# pagina's ----------------------------------------------------------------

pagina:
    name: Pagina
    singular_name: Pagina
    fields:
        title:
            label: Title
            type: text
            class: large
            group: Inhoud
        body:
            label: Content
            type: article
            group: Inhoud
        body_extra:
            label: Extra content
            type: redactor
            group: Inhoud
        banner:
            label: Banner
            type: image
            group: Beelden
            upload: banners
        slug:
            type: slug
            uses: title
            group: Meta
        template:
            type: templateselect
            filter: '/^[^_].*\.twig$/'    
    records_per_page: 20
    order: id

# Entries can be used for things like 'news' or 'blogpostings'. They have a
# 'teaser', which can be used for a short blurb on listing-pages, allowing
# visitors to click-through to the rest of the entry. It also has fields for an
# image and an optional video embed.
# A relation is defined to the pages ContentType. This way you can refer to a
# page from your news-item.
# This ContentType defines 'categories' and 'tags' as taxonomies, allowing the
# editor to use both to categorize a specific entry.
# The 'order' is set to '-datepublish', which means that newer entries will be
# shown above older entries.

locaties:
    name: Locaties
    singular_name: Locatie
    fields:
        title:
            label: Locatie
            type: text
            class: large
            group: Inhoud        
        adres:
            label: Adres
            type: redactor
            group: Inhoud
        schema:
            label: Trainings schema
            type: redactor
            group: Inhoud
        sort:
            type: number
            mode: integer
            default: 1
            group: Inhoud
        slug:
            type: slug
            uses: title
            group: Meta
    relations:
        trainer:
            multiple: true
            label: Trainers op deze plaats
            required: false        
    listing_records: 10
    default_status: published
    order: sort
    records_per_page: 10
    icon_many: "fa:map"
    icon_one: "fa:map"

# The 'People' ContentType can be used to build pages about the people in your
# company, organisation or any other kind of team.

trainers:
    name: Trainers
    singular_name: Trainer
    title_format: "{name} (Â°{year_of_birth})"
    fields:        
        name:
            label: Naam
            type: text
            class: large
            variant: inline
            fixture_format: '{name}'
            group: Inhoud
        year_of_birth:
            label: Geboorte jaar
            type: text
            variant: inline            
            group: Inhoud
        email:
            label: Email
            type: text
            variant: inline
            fixture_format: '{safeEmail}'
            group: Inhoud
        content:
            label: Bio
            type: redactor
            group: Inhoud
        image:
            label: Beeld
            type: image
            group: Inhoud
        sort:
            type: number
            mode: integer
            default: 10
        slug:
            type: slug
            uses: [ name ]
            group: Meta
    relations:
        locaties:
            multiple: true
            label: Is trainer op deze plaats 
            required: false
    listing_records: 20
    default_status: published
    order: sort
    records_per_page: 20
    icon_one: fa:user
    icon_many: fa:users

# The 'Blocks' ContentType is a so-called 'resource ContentType'. This means
# that it can be used to manage smaller pieces of content, like the 'about us'
# text, an 'our address' in the footer, or similar short blurbs of text.
# For more info, see: https://docs.bolt.cm/howto/resource-contenttype

blocks:
    name: Blocks
    singular_name: Block
    excerpt_format: '{content}'
    fields:
        title:
            type: text
            class: large
            label: Title of this Block
            group: Block
        content:
            type: redactor
        slug:
            type: slug
            uses: [ title ]
            group: Meta
    show_on_dashboard: true
    viewless: true
    default_status: published
    searchable: false
    order: title
    icon_many: "fa:cubes"
    icon_one: "fa:cube"

# inschrijving placeholder ----------------------------------------------------------------

inschrijven:
    name: Inschrijven
    singular_name: Inschrijven
    fields:
        title:
            type: text
            group: content
            label: Title
        content:
            type: redactor
            group: content
        slug:
            type: slug
            uses: title
            group: Meta
    singleton: true
    icon_many: "fa:user-plus"
    icon_one: "fa:user-plus"

# privacy page --------------------------------------------------------------------------

privacy:
    name: Privacy
    singular_name: Privacy
    fields:
        title:
            type: text
            group: content
            label: Title
        content:
            type: article
            group: content
        slug:
            type: slug
            uses: title
            group: Meta
    singleton: true
    icon_many: "fa:lock"
    icon_one: "fa:lock"

# -------------------------------------------------------------------------------------------
# Possible field types:
#
# text - varchar(256) - input type text.
# number - double - Input field for numbers, with `mode: integer` or `mode: float`
# imagelist - text (65kb) - Input type for imagelists. Add multiple images. Useful for image sliders, galleries, etcetera.
# image - varchar(256) - image select/upload widget, stored as filename.
# file - varchar(256) - file select/upload widget, stored as filename.
# filelist - text (65kb) - Input type for a list of files. Including a description.
# embed - text (65kb) - embed widget for video and audio. Stored as JSON.
# html - text (65kb) - wysiwyg element.
# textarea - varchar(32768) - Simple, plain < textarea > field.
# markdown - varchar(32768) - wysiwyg element, which is parsed as Markdown text.
# date - datetime - date selector widget, with `mode: date` or `mode: datetime`
# email - text(65kb) - Input type for email.
# select - varchar(256) - select with predefined values
# templateselect - varchar(256) - select with template filenames
# checkbox - integer - checkbox-field which is 1 (checked) or 0 (unchecked)
# set - text (65kb) - Input type for sests. Group fields semantically into a combined set field.
# collection - text (65kb) - Input type for collections. Add multiple fields of different types. Useful for lists.
# data - text (65kb) - Read-only field, useful for storing (raw) data provided by an external source.
# hidden - text (65kb) - Regular text field, except it is hidden from the content editor.
# slug - text(65kb) - The slug for the record. Use with option `uses: [ title ]` to generate based on a title field.

# Using YAML repeated nodes
#
# YAML allows the defining of "repeated nodes". These allow you to define a 'node'
# with a 'key: &name' and referenced later with '<<: *name'
#
# Bolt allows you to define this with the special entry of '__nodes:' that itself
# won't create a ContentType, but will allow you to use it in actual ContentTypes
# to prevent repeating yourself.
#
# To achieve this, first create a key '__nodes:' and place it before your other contenttypes:
#__nodes:
#    field_defaults: &field_defaults
#        title:
#            type: text
#            class: large
#            group: main
#        slug:
#            type: slug
#            uses: title
#    template_defaults: &template_defaults
#        template:
#            type: templateselect
#            filter: '*.twig'
#            group: meta
#
# Then, as an example, you could create a ContentType with default fields, with
# an additional 'image' field.
#
#contenttypeabc:
#    name: ContentType Abc
#    slug: contenttypeabc
#    fields:
#        <<: *field_defaults
#        image:
#            type: image
#            attrib: title
#            extensions: [ gif, jpg, png ]
#        <<: *template_defaults
#    taxonomy: [ chapters ]
#    records_per_page: 10
#
# Alternatively, or additionally, you then can then create a ContentType with
# default fields, and a 'select' field, and a different 'templateselect' option.
#
#contenttypexyz:
#    name: ContentType Xyz
#    slug: contenttypexyz
#    fields:
#        <<: *field_defaults
#        selectfield:
#            type: select
#            values: [ none, foo, bar ]
#        template:
#            type: templateselect
#            filter: '*_xyz.twig'
#    taxonomy: [ tags ]
#    records_per_page: 20
